apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: jaegers.tracing.orange.io
spec:
  group: tracing.orange.io
  names:
    kind: Jaeger
    listKind: JaegerList
    plural: jaegers
    singular: jaeger
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Jaeger deploy strategy
      jsonPath: .spec.type
      name: STRATEGY
      type: string
    - description: Jaeger instance's status
      jsonPath: .status.phase
      name: STATUS
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Jaeger is the Schema for the jaegers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: JaegerSpec Define the desired state of Jaeger
            properties:
              commonSpec:
                description: CommonSpec Define the configuration of components in
                  Kubernetes
                properties:
                  deployment:
                    description: Deployment Define configuration of the kubernetes
                      Deployments
                    properties:
                      replicas:
                        description: Replicas Define Deployment replicas number
                        format: int32
                        type: integer
                      version:
                        description: Version Define the version of the image used
                          by the Jaeger instance component
                        pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$
                        type: string
                    type: object
                  metadata:
                    description: Metadata Define metadata configuration of the component
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations Define annotations setting for metadata
                          on the resource
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels Define labels setting for metadata on
                          the resource
                        type: object
                    type: object
                  service:
                    description: Service Define configuration of the kubernetes Services
                    properties:
                      type:
                        default: ClusterIP
                        description: Service Type string describes ingress methods
                          for a service
                        enum:
                        - ClusterIP
                        - NodePort
                        - LoadBalancer
                        type: string
                    type: object
                type: object
              components:
                description: Components Define the subComponents of Jaeger
                properties:
                  allInOne:
                    description: AllInOne Define all-in-one component
                    properties:
                      setting:
                        description: ComponentSettings Define common Settings between
                          components
                        properties:
                          args:
                            description: Args Defined cmd args for Jaeger components
                            items:
                              type: string
                            type: array
                          envs:
                            description: Envs Defined env for Jaeger components
                            items:
                              properties:
                                name:
                                  description: Define Env name
                                  minLength: 1
                                  type: string
                                value:
                                  description: Define Env value
                                  minLength: 1
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                  collector:
                    description: Collector Define collector component
                    properties:
                      setting:
                        description: ComponentSettings Define common Settings between
                          components
                        properties:
                          args:
                            description: Args Defined cmd args for Jaeger components
                            items:
                              type: string
                            type: array
                          envs:
                            description: Envs Defined env for Jaeger components
                            items:
                              properties:
                                name:
                                  description: Define Env name
                                  minLength: 1
                                  type: string
                                value:
                                  description: Define Env value
                                  minLength: 1
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                  query:
                    description: QueryComponent Define collector component
                    properties:
                      setting:
                        description: ComponentSettings Define common Settings between
                          components
                        properties:
                          args:
                            description: Args Defined cmd args for Jaeger components
                            items:
                              type: string
                            type: array
                          envs:
                            description: Envs Defined env for Jaeger components
                            items:
                              properties:
                                name:
                                  description: Define Env name
                                  minLength: 1
                                  type: string
                                value:
                                  description: Define Env value
                                  minLength: 1
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                  storage:
                    description: Storage Define backend storage component
                    properties:
                      es:
                        description: Es Define backend storage is elasticsearch
                        properties:
                          url:
                            type: string
                        type: object
                      options:
                        description: Options Define backend storage options
                        items:
                          type: string
                        type: array
                      type:
                        description: Type Define backend storage type
                        type: string
                    type: object
                type: object
              extensions:
                description: Extensions Define the configuration of the extension
                properties:
                  httpRoutes:
                    description: HTTPRoute Define the configuration of GatewayAPI
                      routes
                    items:
                      description: HTTPRoute Define the HTTPRoute configuration for
                        the Gateway API
                      properties:
                        hostnames:
                          description: |-
                            Hostnames Define a set of hostnames that should match against the HTTP Host
                            header to select a HTTPRoute used to process the request.
                          items:
                            description: |-
                              Hostname is the fully qualified domain name of a network host. This matches
                              the RFC 1123 definition of a hostname with 2 notable exceptions:


                               1. IPs are not allowed.
                               2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                                  label must appear by itself as the first label.


                              Hostname can be "precise" which is a domain name without the terminating
                              dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                              domain name prefixed with a single wildcard label (e.g. `*.example.com`).


                              Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                              alphanumeric characters or '-', and must start and end with an alphanumeric
                              character. No other punctuation is allowed.
                            maxLength: 253
                            minLength: 1
                            pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          type: array
                        parentRef:
                          description: |-
                            ParentRefs references the resources (usually Gateways) that a Route wants
                            to be attached to.
                          properties:
                            group:
                              default: gateway.networking.k8s.io
                              description: |-
                                Group is the group of the referent.
                                When unspecified, "gateway.networking.k8s.io" is inferred.
                                To set the core API group (such as for a "Service" kind referent),
                                Group must be explicitly set to "" (empty string).


                                Support: Core
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            kind:
                              default: Gateway
                              description: |-
                                Kind is kind of the referent.


                                There are two kinds of parent resources with "Core" support:


                                * Gateway (Gateway conformance profile)
                                * Service (Mesh conformance profile, experimental, ClusterIP Services only)


                                Support for other resources is Implementation-Specific.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                              type: string
                            name:
                              description: |-
                                Name is the name of the referent.


                                Support: Core
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: |-
                                Namespace is the namespace of the referent. When unspecified, this refers
                                to the local namespace of the Route.


                                Note that there are specific rules for ParentRefs which cross namespace
                                boundaries. Cross-namespace references are only valid if they are explicitly
                                allowed by something in the namespace they are referring to. For example:
                                Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                                generic way to enable any other kind of cross-namespace reference.


                                <gateway:experimental:description>
                                ParentRefs from a Route to a Service in the same namespace are "producer"
                                routes, which apply default routing rules to inbound connections from
                                any namespace to the Service.


                                ParentRefs from a Route to a Service in a different namespace are
                                "consumer" routes, and these routing rules are only applied to outbound
                                connections originating from the same namespace as the Route, for which
                                the intended destination of the connections are a Service targeted as a
                                ParentRef of the Route.
                                </gateway:experimental:description>


                                Support: Core
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            port:
                              description: |-
                                Port is the network port this Route targets. It can be interpreted
                                differently based on the type of parent resource.


                                When the parent resource is a Gateway, this targets all listeners
                                listening on the specified port that also support this kind of Route(and
                                select this Route). It's not recommended to set `Port` unless the
                                networking behaviors specified in a Route must apply to a specific port
                                as opposed to a listener(s) whose port(s) may be changed. When both Port
                                and SectionName are specified, the name and port of the selected listener
                                must match both specified values.


                                <gateway:experimental:description>
                                When the parent resource is a Service, this targets a specific port in the
                                Service spec. When both Port (experimental) and SectionName are specified,
                                the name and port of the selected port must match both specified values.
                                </gateway:experimental:description>


                                Implementations MAY choose to support other parent resources.
                                Implementations supporting other types of parent resources MUST clearly
                                document how/if Port is interpreted.


                                For the purpose of status, an attachment is considered successful as
                                long as the parent resource accepts it partially. For example, Gateway
                                listeners can restrict which Routes can attach to them by Route kind,
                                namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                                from the referencing Route, the Route MUST be considered successfully
                                attached. If no Gateway listeners accept attachment from this Route,
                                the Route MUST be considered detached from the Gateway.


                                Support: Extended


                                <gateway:experimental>
                              format: int32
                              maximum: 65535
                              minimum: 1
                              type: integer
                            sectionName:
                              description: |-
                                SectionName is the name of a section within the target resource. In the
                                following resources, SectionName is interpreted as the following:


                                * Gateway: Listener Name. When both Port (experimental) and SectionName
                                are specified, the name and port of the selected listener must match
                                both specified values.
                                * Service: Port Name. When both Port (experimental) and SectionName
                                are specified, the name and port of the selected listener must match
                                both specified values. Note that attaching Routes to Services as Parents
                                is part of experimental Mesh support and is not supported for any other
                                purpose.


                                Implementations MAY choose to support attaching Routes to other resources.
                                If that is the case, they MUST clearly document how SectionName is
                                interpreted.


                                When unspecified (empty string), this will reference the entire resource.
                                For the purpose of status, an attachment is considered successful if at
                                least one section in the parent resource accepts it. For example, Gateway
                                listeners can restrict which Routes can attach to them by Route kind,
                                namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                                the referencing Route, the Route MUST be considered successfully
                                attached. If no Gateway listeners accept attachment from this Route, the
                                Route MUST be considered detached from the Gateway.


                                Support: Core
                              maxLength: 253
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                          required:
                          - name
                          type: object
                        target:
                          description: Target Define the Service target to which routes
                            need to be added
                          enum:
                          - collector
                          - query
                          type: string
                        targetPort:
                          description: TargetPort Define the Service target port to
                            which routes need to be added
                          type: integer
                      type: object
                    type: array
                type: object
              type:
                default: allInOne
                description: Type Define the type of Jaeger deployment
                enum:
                - allInOne
                - distribute
                type: string
            type: object
          status:
            description: JaegerStatus Define the observed state of Jaeger
            properties:
              conditions:
                description: Conditions  Define the conditions of Jaeger
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              phase:
                default: Unknown
                description: Phase Define the component phase of Jaeger
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
